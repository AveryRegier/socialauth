http://socialauth.googlecode.com/svn/wiki/images/gmail_logo.gif http://socialauth.googlecode.com/svn/wiki/images/hotmail-icon.jpg http://socialauth.googlecode.com/svn/wiki/images/yahoo-icon-pop.png http://socialauth.googlecode.com/svn/wiki/images/twitter-pop-up.png http://socialauth.googlecode.com/svn/wiki/images/facebook-icon-pop.png http://socialauth.googlecode.com/svn/wiki/images/linkedin-logo.jpg http://socialauth.googlecode.com/svn/wiki/images/foursquare-logo.jpg

!SocialAuth is a Java library for you if your web application requires:
  * Authenticating users through external oAuth providers like Gmail, Hotmail, Yahoo, Twitter, Facebook, !LinkedIn, Foursquare, !MySpace as well as through OpenID providers like myopenid.com.

  * Easy user registration. All you need to do is create a page where users can click on buttons for the above providers or other supported providers. Just call !SocialAuth and you can get all their profile details.

  * Importing contacts from Google, Yahoo or Hotmail. Support for importing friends from Facebook, followers from Twitter and contacts from !LinkedIn is available, but currently Facebook, Twitter and !LinkedIn do not provide email addresses.

See our [http://opensource.brickred.com/socialauthdemo/ Struts demo in action] !

==Latest Updates==
  # New lightweight version 1.2-beta1 released with socialauth-spring and socialauth-seam library
  # Several dependencies have been removed and new dependencies-1.2.zip released 
  # Jars are also uploaded on public maven repository Sonatype

==Why !SocialAuth==
There are so many libraries out there which implement OpenID and oAuth, so why another library? 
There many practical challenges that we faced while doing the implementation of above use cases. None of them is insurmountable but the developer could spend a couple of weeks solving these, which we actually did and hence decided to make things better for the community. 
  * There are many libraries for implementing Open ID and many for implementing oAuth. It becomes a difficult exercise to choose one that will do the integration quickly with the providers you want.
  * Some libraries do not implement all the features and it becomes known only in the later stages of implementation – for example we found out that openid4java does not implement the hybrid protocol. We also found out that it is not easy to integrate dyuproject library.
  * Even after implementing using the library, it does not work out of the box for all providers. There are always certain things specific to a certain provider. For example the scopes are different as well as some steps in authorization may be different.
  * Getting the actual data, for example contacts of a user is out of the scope of these protocols and hence most libraries do not implement this functionality.

So what we implemented is a wrapper that leverages these existing libraries, and works out of the box without requiring you to face the above challenges. You get the same interface to deal with integration of every provider. 


==How it works?==
http://socialauth.googlecode.com/svn/wiki/images/socialauth_flow_diagram_1.jpg
<br/>
http://socialauth.googlecode.com/svn/wiki/images/socialauth_flow_diagram_2.jpg

 # You get the API keys from providers like Facebook, Google and Yahoo. For this, you need to have a public domain on which you plan to deploy the application. It is important to note that your application can only run on the domain which you provided while getting the keys. If you want to run it locally, [HowToRunApplicationWithLocalhostOnWindows please see the steps here].
 # You make a request for authentication by using SocialAuth library. The library redirects the user to Facebook, Yahoo or other provider’s website where they enter the credentials.
 # The provider redirects the user back to your application with a token appended. Now you call the SocialAuth library and pass it this request token.
 # Now you can call SocialAuth library to get information about the user, and contacts from the provider.


==Getting Started==
We are sure you now want to get started with the code. We support Struts based, Spring based application as well as JBoss Seam based application. You can download the current version and dependencies or you can use maven dependency. For more information have a look at [GetStarted Get Started page].

Please keep in mind that all features may not be implemented in all providers, for example, you can’t update your status on Hotmail and you can’t import contacts from Facebook yet. Some of the limitations are inherent, for example Twitter doesn’t give out the email address while giving other user details.

Please [http://code.google.com/p/socialauth/issues/entry report any issues] and we promise to get back

==Acknowledgements==

The inspiration for getting more through Open ID came through [http://github.com/ajasmin/seam-openid-with-name-and-email this example].

Sincere thanks to [http://livecomplete.com http://socialauth.googlecode.com/svn/wiki/images/livecomplete-logo.png] for support in development of this library. [http://veesearch.com http://socialauth.googlecode.com/svn/wiki/images/veesearch-logo.png] is using the library as a beta user.
